# Generated by Django 3.0.6 on 2020-05-08 21:32

import datetime
from django.conf import settings
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('preferred_name', models.CharField(blank=True, max_length=30)),
                ('sex', models.PositiveSmallIntegerField(choices=[(0, 'Other'), (1, 'Male'), (2, 'Female')], default=0)),
                ('bio', models.CharField(blank=True, max_length=500)),
                ('birthday', models.DateField(default=datetime.date.today)),
                ('current_term', models.PositiveSmallIntegerField(choices=[(0, '1A'), (1, '1B'), (2, 'W1'), (3, '2A'), (4, 'W2'), (5, '2B'), (6, 'W3'), (7, '3A'), (8, 'W4'), (9, '3B'), (10, 'W5'), (11, 'W6'), (12, '4A'), (13, '4B')], default=0)),
                ('enrolled_program', models.PositiveSmallIntegerField(choices=[(0, 'Engineering'), (1, 'Arts'), (2, 'Math'), (3, 'Science'), (4, 'Business'), (5, 'Law')], default=0)),
                ('phone_number', models.CharField(blank=True, max_length=15)),
                ('photo', models.ImageField(blank=True, upload_to='images/user_photos')),
                ('region', models.PositiveSmallIntegerField(choices=[(0, 'Waterloo'), (1, 'Toronto'), (2, 'Brampton'), (3, 'Ottawa')], default=0)),
                ('datetime_created', models.DateTimeField(auto_now_add=True)),
                ('notification_privacy', models.PositiveSmallIntegerField(choices=[(0, 'All'), (1, 'Following'), (2, 'None')], default=0)),
                ('allow_location', models.BooleanField(default=False)),
                ('currency', models.PositiveSmallIntegerField(choices=[(0, 'CAD'), (1, 'USD')], default=0)),
                ('language', models.PositiveSmallIntegerField(choices=[(0, 'English'), (1, 'French')], default=0)),
                ('dark_theme', models.BooleanField(default=False)),
                ('blocked_users', models.ManyToManyField(blank=True, related_name='_customuser_blocked_users_+', to=settings.AUTH_USER_MODEL)),
                ('followed_users', models.ManyToManyField(blank=True, related_name='_customuser_followed_users_+', to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
    ]
