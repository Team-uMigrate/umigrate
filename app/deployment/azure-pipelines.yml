# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

name: $(MajorVersion).$(MinorVersion)

trigger:
  branches:
    include:
      - main
  paths:
    include:
      - app/*
    exclude:
      - app/deployment/azure-pipelines.yml

pr:
  branches:
    include:
      - main
  paths:
    include:
      - app/*
    exclude:
      - app/deployment/azure-pipelines.yml

variables:
  - name: MajorVersion
    value: 0.0
  - name: MinorVersion
    value: $[counter(format('{0}-{1}', variables['Build.SourceBranch'], variables['MajorVersion']), 0)]
  - name: IsMain
    value: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]
  - name: IsPr
    value: $[contains(variables['Build.SourceBranch'], 'refs/pull/')]
  - name: IsBranch
    value: $[and(eq(variables['IsPr'], 'False'), eq(variables['IsMain'], 'False'))]

jobs:
  - job: "Job"
    displayName: "Build, Test, & Publish"
    pool:
      vmImage: "ubuntu-18.04"
    steps:
      - task: CopyFiles@2
        displayName: "Copy App Source Files"
        inputs:
          SourceFolder: "app/src/"
          Contents: "**"
          TargetFolder: "$(Build.ArtifactStagingDirectory)"

      - task: CopyFiles@2
        displayName: "Copy App Deployment Scripts"
        inputs:
          SourceFolder: "app/deployment/scripts"
          Contents: "**"
          TargetFolder: "$(Build.ArtifactStagingDirectory)/scripts"

      - task: UseNode@1
        displayName: "Use Node 14"
        inputs:
          version: "14.x"

      - task: Npm@1
        displayName: "Install npm Packages"
        inputs:
          command: "install"
          workingDir: "app/src"

      - task: PowerShell@2
        displayName: "Check Formatting"
        inputs:
          targetType: "inline"
          script: |
            cd app/src
            npm run format:unix

      - task: PowerShell@2
        displayName: "Install Expo"
        inputs:
          targetType: "inline"
          script: |
            npm install -g expo-cli

      - task: PowerShell@2
        displayName: "Run Tests"
        inputs:
          targetType: "inline"
          script: |
            cd app/src
            npm test
            exit 0
          errorActionPreference: "continue"

      - task: PublishTestResults@2
        displayName: "Publish Test Results"
        inputs:
          testResultsFormat: "JUnit"
          testResultsFiles: "**/clover.xml"
          failTaskOnFailedTests: true
          testRunTitle: "App Test"

      - task: Npm@1
        displayName: "Build"
        inputs:
          command: "custom"
          workingDir: "app/src"
          customCommand: "run build"

      - task: PublishBuildArtifacts@1
        displayName: "Publish Build Artifact"
        inputs:
          PathtoPublish: "$(Build.ArtifactStagingDirectory)"
          ArtifactName: "drop"
          publishLocation: "Container"
