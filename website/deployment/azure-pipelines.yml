# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

name: $(MajorVersion).$(MinorVersion)

trigger:
  branches:
    include:
    - master
  paths:
    include:
      - website/*
    exclude:
      - website/deployment/azure-pipelines.yml

pr:      
  branches:
    include:
    - master
  paths:
    include:
      - website/*
    exclude:
      - website/deployment/azure-pipelines.yml

variables:
- name: MajorVersion
  value: 0.0
- name: MinorVersion
  value: $[counter(format('{0}-{1}', variables['Build.SourceBranch'], variables['MajorVersion']), 0)]
- name: IsMaster
  value: $[eq(variables['Build.SourceBranch'], 'refs/heads/master')]
- name: IsPr
  value: $[contains(variables['Build.SourceBranch'], 'refs/pull/')]
- name: IsBranch
  value: $[and(eq(variables['IsPr'], 'False'), eq(variables['IsMaster'], 'False'))]

pool:
  vmImage: 'ubuntu-latest'


steps:
- task: UseNode@1
  inputs:
    version: '12.x'

- task: Npm@1
  inputs:
    command: 'install'
    workingDir: 'website/src'

- task: Npm@1
  inputs:
    command: 'custom'
    workingDir: 'website/src'
    customCommand: 'test -- a --watchAll=false'

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '**/Website-Test.xml'
    failTaskOnFailedTests: true

- task: Npm@1
  inputs:
    command: 'custom'
    workingDir: 'website/src'
    customCommand: 'run build'

- task: CopyFiles@2
  inputs:
    SourceFolder: 'website/src/build'
    Contents: '**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
